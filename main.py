from dublib.Methods.JSON import ReadJSON
from dublib.TelebotUtils import UsersManager
from telebot import types
from Source.ReplyKeyboards import ReplyKeyboards
from dublib.Methods.Filesystem import MakeRootDirectories
from dublib.Methods.System import Clear
from Source.Neurowork import Neurwork
from Source.Updater import Updater
from Source.Functions import DeleteSymbols, GetTodayDate

import telebot
import logging


Clear()

Settings = ReadJSON("Settings.json")
MakeRootDirectories(["Data/Users"])

logging.basicConfig(level=logging.INFO, encoding="utf-8", filename="LOGING.log", filemode="w",
	format='%(asctime)s - %(levelname)s - %(message)s',
	datefmt='%Y-%m-%d %H:%M:%S')

Bot = telebot.TeleBot(Settings["token"])
usermanager = UsersManager("Data/Users")
ReplyKeyboardBox = ReplyKeyboards()
neurowork = Neurwork()
updater = Updater()


@Bot.message_handler(commands=["start"])
def ProcessCommandStart(Message: types.Message):
	User = usermanager.auth(Message.from_user)
	Bot.send_message(
		Message.chat.id, 
		"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä —Ç–∞–π–Ω –≤–∞—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏! –ü—Ä–∏–æ—Ç–∫—Ä–æ–π—Ç–µ –∏—Ö –∑–∞–≤–µ—Å—É –∏ —É–∑–Ω–∞–π—Ç–µ, —á—Ç–æ –∂–µ –≤–∞–º –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—é—Ç –∑–≤–µ–∑–¥—ã! üí´", 
		reply_markup = ReplyKeyboardBox.AddMainMenu()
		)
	Bot.delete_message(Message.chat.id, Message.id)

@Bot.message_handler(content_types = ["text"], regexp = "–û–±—â–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å")
def ProcessShareWithFriends(Message: types.Message):
	User = usermanager.auth(Message.from_user)

	Bot.send_message(
		Message.chat.id, 
		text = "–í—ã–±–µ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞:",
		reply_markup = ReplyKeyboardBox.ZodiacMenu()
		)
	User.set_property("type", "General")
	User.set_expected_type("first_zodiak")
	Bot.delete_message(Message.chat.id, Message.id)
	  
@Bot.message_handler(content_types = ["text"], regexp = "–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
def ProcessShareWithFriends(Message: types.Message):
	User = usermanager.auth(Message.from_user)

	Bot.send_message(
		Message.chat.id, 
		text = "–í—ã–±–µ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞:",
		reply_markup = ReplyKeyboardBox.ZodiacMenu()
		)
	User.set_property("type", "Today")
	User.set_expected_type("first_zodiak")
	Bot.delete_message(Message.chat.id, Message.id)
	
@Bot.message_handler(content_types = ["text"], regexp = "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏")
def ProcessShareWithFriends(Message: types.Message):
	User = usermanager.auth(Message.from_user)


@Bot.message_handler(content_types = ["text"])
def ProcessShareWithFriends(Message: types.Message):
	User = usermanager.auth(Message.from_user)

	if User.expected_type == "first_zodiak":
		User.set_property("first_zodiak", DeleteSymbols(Message.text))
		Bot.send_message(
			Message.chat.id, 
			text = "–ê —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ —á–µ–ª–æ–≤–µ–∫–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å:",
			reply_markup = ReplyKeyboardBox.ZodiacMenu()
			)
		User.set_expected_type("second_zodiak")
		return
	
	if User.expected_type == "second_zodiak":
		User.set_property("second_zodiak", DeleteSymbols(Message.text))
		if User.get_property("type") == "General":
			Bot.send_message(
				Message.chat.id, 
				text = "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ –æ–±—â—É—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å.",
				reply_markup = ReplyKeyboardBox.AddMainMenu()
				)
		else:
			Today = GetTodayDate()
			Key = updater.CreateKey(User.get_property("first_zodiak"), User.get_property("second_zodiak"))
			print(Key)
			if updater.GetText(Key):
				Text = updater.GetText(Key)
			else:
				Text = neurowork.GetResponce(User)
				updater.AddText(Text, Key, Today)
			print(Text)
			Bot.send_message(
				Message.chat.id, 
				text = Text,
				reply_markup = ReplyKeyboardBox.AddMainMenu(), 
				parse_mode = "MarkdownV2" 
				)
		User.set_expected_type(None)
		return
	
	Bot.delete_message(Message.chat.id, Message.id)
	
Bot.infinity_polling()
